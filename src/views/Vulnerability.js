import React, {Component} from 'react';
import ReactDOM from 'react-dom';
import {observer, inject} from 'mobx-react';

import getWeb3 from "../utils/getWeb3";

@observer
class Vulnerability extends Component {
    constructor(props) {
        super(props);

        this.commit = this.commit.bind(this);
    }
    async componentDidMount() {
        const web3 = await getWeb3();        
        const account = (await web3.eth.getAccounts())[0];
        await this.props.vulnerability.fetch(web3, account, 0);
    }

    async commit() {
        const web3 = await getWeb3();        
        const account = (await web3.eth.getAccounts())[0];
        await this.props.vulnerability.commit(
            web3,
            account,
            this.refs.contractAddress.value,
            0
        );
        await this.props.vulnerability.fetch(web3, account, 0);
    }

    render() {
        return (
            <div>
                <span>{this.props.vulnerability.id}</span>
                <span>{this.props.vulnerability.exploitable}</span>
                <span>{this.props.vulnerability.hunter}</span>
                <input
                    type="text"
                    placeholder="contract address"
                    ref="contractAddress"
                />
                <button onClick={this.commit}>Commit</button>
            </div>
        );
    }
}

export default Vulnerability;
