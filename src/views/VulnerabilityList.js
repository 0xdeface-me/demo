import React, {Component} from 'react';
import ReactDOM from 'react-dom';
import {observer, inject} from 'mobx-react';

import getWeb3 from "../utils/getWeb3";

@observer
class VulnerabilityList extends Component {
    constructor(props) {
        super(props);

        this.commit = this.commit.bind(this);
    }
    async componentDidMount() {
        const web3 = await getWeb3();        
        const account = (await web3.eth.getAccounts())[0];
        console.log(this.props);
        await this.props.vulnerabilities.fetchAll(web3, account);
    }

    async commit() {
        const web3 = await getWeb3();        
        const account = (await web3.eth.getAccounts())[0];
        await this.props.vulnerability.commit(
            web3,
            account,
            this.refs.contractAddress.value,
            0
        );
        await this.props.vulnerability.fetch(web3, account, 0);
    }

    render() {
        const { list } = this.props.vulnerabilities;
        return (
            <div>
                {list.map((vuln) => (
                    <div>
                        <span>{vuln.id}</span>
                        <span>{vuln.exploitable}</span>
                        <span>{vuln.hunter}</span>
                    </div>
                ))}
            </div>
        );
    }
}

export default VulnerabilityList;
